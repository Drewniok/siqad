#!/bin/bash

set -e

# determine number of physical cores to use for compilation
cpu_cores=$(grep "^core id" /proc/cpuinfo | sort -u | wc -l)
multicore_compile="-j $cpu_cores"

# store handy directories
make_dir=$(pwd)
qmake_dir=$(cd `dirname $0` && pwd)

# figure out which qmake command to use
if [ "$FOR_OS" == "win32" ]; then
    export FOR_OS
    export PATH="$PATH:/usr/lib/mxe/usr/bin"
    QMAKE_COMMAND=i686-w64-mingw32.static-qmake-qt5
    make_flag=release
elif [ "$FOR_OS" == "win64" ]; then
    export FOR_OS
    export PATH="$PATH:/usr/lib/mxe/usr/bin"
    QMAKE_COMMAND=x86_64-w64-mingw32.static-qmake-qt5
    make_flag=release
else
    QMAKE_COMMAND=qmake
fi

# make SWIG at the central location and copy to desired destinations
if [[ "$@" == "-swig" ]]
then
    echo "Building SWIG SiQADConnector at central location... $FOR_OS"
    cd $qmake_dir/src/phys/siqadconn
    ./swig_generate_and_compile FOR_OS=$FOR_OS

    cp lib/* $qmake_dir/src/phys/qpuanneal/src
    cp lib/* $qmake_dir/src/phys/afmmarcus/src
    cp lib/* $qmake_dir/src/phys/poissolver/FEM/src/python
    cp lib/* $qmake_dir/src/plugins/db_pattern_recognition
fi

# make simanneal
echo "Building SimAnneal... $FOR_OS"
cd $qmake_dir/src/phys/simanneal
make $multicore_compile FOR_OS=$FOR_OS

# Uncomment particular sections if you want to build a specific version of SWIG for that engine

## make qpuanneal
#echo "Building QPUAnneal... $FOR_OS"
#if [[ "$@" == "-swig" ]]
#then
#    echo "Building swig for QPUAnneal"
#    cd $qmake_dir/src/phys/qpuanneal/src/swig_siqadconn
#    ./swig_generate_and_compile FOR_OS=$FOR_OS
#fi
#
## make afmmarcus
#echo "Building AFMMarcus... $FOR_OS"
#if [[ "$@" == "-swig" ]]
#then
#    echo "Building swig for AFMMarcus"
#    cd $qmake_dir/src/phys/afmmarcus/src/swig_siqadconn
#    ./swig_generate_and_compile FOR_OS=$FOR_OS
#fi
#
## make poissolver
#echo "Building PoisSolver... $FOR_OS"
#if [[ "$@" == "-swig" ]]
#then
#    echo "Building swig for PoisSolver"
#    cd $qmake_dir/src/phys/poissolver/FEM/src/python/swig_siqadconn
#    ./swig_generate_and_compile FOR_OS=$FOR_OS
#fi

# use qmake to create Make files for the GUI
cd "$make_dir"
echo "Running qmake..."
$QMAKE_COMMAND "$qmake_dir"

# make the GUI and copy physics engine files over
echo "Building GUI..."
cd $make_dir && make $make_flag $multicore_compile
make install


# extra actions if building for Windows
if [ "$FOR_OS" == "win64" ] || [ "$FOR_OS" == "win32" ] ; then
    cd "$make_dir/build/release/"
    rm -rf .moc .obj .qrc

    cd "$make_dir/build/release/src/phys/"
    rm -rf poissolver
    sed -i 's/<\/bin_path>/\.exe&/' ./simanneal/sim_anneal.physeng

    cd "$make_dir/build/"
    zip -r "siqad_64.zip" "release"
fi
